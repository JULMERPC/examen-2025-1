server:
  port: 8092
spring:
  application:
    name: jpc-enrollment-service

  datasource:
    url: jdbc:mysql://localhost:3306/jpc-enrollment
    username: root
    password:
    driver-class-name: com.mysql.cj.jdbc.Driver


  main:
    allow-bean-definition-overriding: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

feign:
  circuitbreaker:
    enabled: true








# Configuración de Circuit Breaker con Resilience4j
#resilience4j:
#  circuitbreaker:
#    instances:
#      courseService:
#        registerHealthIndicator: true
#        slidingWindowSize: 10
#        slidingWindowType: COUNT_BASED
#        permittedNumberOfCallsInHalfOpenState: 3
#        minimumNumberOfCalls: 5
#        waitDurationInOpenState: 5s
#        failureRateThreshold: 50
#        eventConsumerBufferSize: 10
#      studentService:
#        registerHealthIndicator: true
#        slidingWindowSize: 10
#        slidingWindowType: COUNT_BASED
#        permittedNumberOfCallsInHalfOpenState: 3
#        minimumNumberOfCalls: 5
#        waitDurationInOpenState: 5s
#        failureRateThreshold: 50
#        eventConsumerBufferSize: 10
#  timelimiter:
#    instances:
#      courseService:
#        timeoutDuration: 3s
#      studentService:
#        timeoutDuration: 3s
#  retry:
#    instances:
#      courseService:
#        maxAttempts: 3
#        waitDuration: 500ms
#        retryExceptions:
#          - org.springframework.web.client.ResourceAccessException
#          - java.util.concurrent.TimeoutException
#      studentService:
#        maxAttempts: 3
#        waitDuration: 500ms
#        retryExceptions:
#          - org.springframework.web.client.ResourceAccessException
#          - java.util.concurrent.TimeoutException
#
resilience4j:
  circuitbreaker:
    instances:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      courseService:
        baseConfig: default
      studentService:
        baseConfig: default

  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2

  timelimiter:
    instances:
      default:
        timeoutDuration: 2s
      courseService:
        timeoutDuration: 1s
      studentService:
        timeoutDuration: 1s






# Configuración de Actuator para monitoreo
management:
  endpoints:
    web:
      exposure:
        include: health,info,circuitbreakers,retries,timelimiters
  health:
    circuitbreakers:
      enabled: true
    retries:
      enabled: true



springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /doc/swagger-ui.html

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8090/eureka
  instance:
    hostname: localhost






